Elm.Main = Elm.Main || {};
Elm.Main.make = function (_elm) {
   "use strict";
   _elm.Main = _elm.Main || {};
   if (_elm.Main.values)
   return _elm.Main.values;
   var _op = {},
   _N = Elm.Native,
   _U = _N.Utils.make(_elm),
   _L = _N.List.make(_elm),
   _P = _N.Ports.make(_elm),
   $moduleName = "Main",
   $Basics = Elm.Basics.make(_elm),
   $Graphics$Element = Elm.Graphics.Element.make(_elm),
   $List = Elm.List.make(_elm),
   $Text = Elm.Text.make(_elm);
   var updateIfRight = F2(function (point,
   i) {
      return _U.eq(i,
      point.x) ? 1 : 0;
   });
   var writeToCell = F2(function (row,
   point) {
      return A2($List.indexedMap,
      F2(function (i,_v0) {
         return function () {
            return A2(updateIfRight,
            point,
            i);
         }();
      }),
      row);
   });
   var writeToRow = F3(function (row,
   point,
   i) {
      return _U.eq(i,
      point.y) ? A2(writeToCell,
      row,
      point) : row;
   });
   var writeToBoard = function (state) {
      return A2($List.map,
      function (row) {
         return A2($List.append,
         A2($List.take,
         state.position.x,
         row),
         A2($List._op["::"],
         1,
         A2($List.drop,
         state.position.x + 1,
         row)));
      },
      state.board);
   };
   var renderRow = function (r) {
      return $Text.asText(r);
   };
   var renderBoard = function (b) {
      return A2($List.map,
      renderRow,
      b);
   };
   var writePieaceOnBoard = function (state) {
      return writeToBoard(state);
   };
   var $ = {ctor: "_Tuple2"
           ,_0: 10
           ,_1: 20},
   cols = $._0,
   rows = $._1;
   var createEmptyBoard = A2($List.repeat,
   rows,
   A2($List.repeat,cols,0));
   var initialState = {_: {}
                      ,board: createEmptyBoard
                      ,piece: _L.fromArray([{_: {}
                                            ,x: 0
                                            ,y: 0}
                                           ,{_: {},x: 1,y: 0}])
                      ,position: {_: {},x: 2,y: 2}};
   var main = $Graphics$Element.flow($Graphics$Element.down)(renderBoard(writePieaceOnBoard(initialState)));
   var State = F3(function (a,
   b,
   c) {
      return {_: {}
             ,board: a
             ,piece: c
             ,position: b};
   });
   var Point = F2(function (a,b) {
      return {_: {},x: a,y: b};
   });
   _elm.Main.values = {_op: _op
                      ,Point: Point
                      ,State: State
                      ,cols: cols
                      ,rows: rows
                      ,createEmptyBoard: createEmptyBoard
                      ,initialState: initialState
                      ,main: main
                      ,writePieaceOnBoard: writePieaceOnBoard
                      ,renderBoard: renderBoard
                      ,renderRow: renderRow
                      ,writeToBoard: writeToBoard
                      ,writeToRow: writeToRow
                      ,writeToCell: writeToCell
                      ,updateIfRight: updateIfRight};
   return _elm.Main.values;
};